%% MMSP2 - Lab 1
%  Exercise 1 - Audio signal encoding
%  Lucio Bianchi - 10/12/2013

clear
close all
clc

%% 1) Load file 'pf.wav' and plot it. 
%%    Check that its values are included between [-1,+1]
[y, Fs] = wavread('pf.wav');
t = (0:1/Fs:length(y)/Fs-1/Fs)';

figure
plot(t,y), grid on
xlabel('Time [s]'), ylabel('Amplitude')

disp(['Min value = ' num2str(min(y))])
disp(['Max value = ' num2str(max(y))])

%% 2) Take the first 60 s of the file and rescale it to take integer values 
%% between [0 255]
t = t(1:60*Fs);
y = y(1:60*Fs);
y = round(255/2*(y+1));

figure
plot(t,y), grid on
xlabel('Time [s]'), ylabel('Amplitude')

%% 3) Convert each value into its binary representation over 8 bit
%%    hint: use the function dec2binary()
y_8bit = dec2binary(y,8);

%% 4) Display the entropy of the binary source that has generated the signal
%%    hint: use the function hist() to compute the probability distribution
y_8bit = y_8bit(:);
d = hist(y_8bit,[0 1]);
p = d/length(y_8bit);
H = -sum(p .* log2(p));

disp(['Binary source: H(y) = ', num2str(H)]);


%% 5) Consider the signal as generated by a finite source with alphabet [0 255].
%%    Plot the normalized histogram and compute the entropy.
%%    hint: avoid evaluating log2(0) when computing the entropy!
d = hist(y,0:255);
p = d/length(y);

figure
bar(0:255,p)
xlabel('Alphabet symbols'), ylabel('Probability')
axis([0 255 0 max(p)])

p = p(p~=0);
H = -sum(p .* log2(p));
disp(['256-symbols source: H(y) = ', num2str(H)]);


%% 6) Consider the signal as generated by a source with memory=1.
%%    Compute the conditional entropy

% Compute joint probability
d_joint = hist([y(2:end)*255+y(1:end-1)], 0:255^2);
%d_joint = hist3([y(2:end) y(1:end-1)], {0:255 0:255})
%d_joint = hist3([y(2:end) y(1:end-1)], {0:255 0:255});

p_joint = d_joint/length(y(2:end));
p_joint = p_joint(p_joint ~= 0);

% compute joint entropy
H_joint = -sum(p_joint .* log2(p_joint));

% compute conditional entropy using chain rule
H_cond = H_joint - H;
disp(['Conditional entropy: H(X_k | X_k-1) = ', num2str(H_cond)]);